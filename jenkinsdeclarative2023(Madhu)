pipeline{
agent any

tools {
  maven 'Maven3.9.5'
}

/* triggers {
  cron ('* * * * *')
} */

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}


stages{
stage('Git'){
steps{
notifyBuild('STARTED')
git branch: 'development', credentialsId: '8d4a90b9-9c4a-4860-b6a7-7665f1afb3c2', url: 'https://github.com/Madhusudhan1990/maven-web-application.git'   
}    
}    

stage('Build'){
steps{
sh 'mvn clean package'    
}
}

stage('sonar'){
steps{
sh 'mvn clean sonar:sonar'
}
}
 
stage('nexus'){
steps{
sh 'mvn clean deploy'
}
}
    
stage('tomcat'){
steps{
sshagent(['28ede1eb-906d-4ba8-bcb5-0ab7e94bf0af']){
sh 'scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.45.14:/opt/apache-tomcat-9.0.83/webapps'
}
}
}
    
    
} //stages ends

post {
  success {
    notifyBuild(currentBuild.result)
  }
  failure {
    notifyBuild(currentBuild.result)
  }
}


} //pipeline ends



def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#revisionslack-team')
}
